{
  "binnedEntropy":{
    "numBins":{
      "value":[2,5,10],
      "type":"long"
    }
  },
  "cidCe":{
    "isAbs":{
      "value":[0,1],
      "type":"boolean"
    }
  },
  "numCrossing":{
    "crossVal":{
      "value":[-1,0,1],
      "type":"long"
    }
  },
  "ratioBeyondRSigma":{
    "r":{
      "value":[0.5,1,1.5,2,2.5,3,5,6,7,10],
      "type":"float"
    }
  },
  "largestDev":{
    "ratio":{
      "value":[0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95],
      "type":"float"
    }
  },
  "c3":{
    "lag":{
      "value":[1,2,3],
      "type":"long"
    }
  },
  "autoCorr":{
    "lag":{
      "value":[0,1,2,3,4,5,6,7,8,9],
      "type":"long"
    }  
  },
  "indexMassQuantile":{
    "quantile":{
      "value":[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9],
      "type":"float"
    }
  },
  "numCwtPeaks":{
    "width":{
      "value":[1,5],
      "type":"long"
    }
  },
  "numPeaks":{
    "support":{
      "value":[1,3],
      "type":"long"
    }
  },
  "symmetricLooking":{
    "ratio":{
      "value":[0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95],
      "type":"float"
    }
  },
  "treverseAsymStat":{
    "lag":{
      "value":[1,2,3],
      "type":"long"
    }
  },
  "quantile":{
    "quantile":{
      "value":[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9],
      "type":"float"
    }
  },
  "valCount":{
    "val":{
      "value":[0,1,null,inf,-inf],
      "type":"int"
    }
  },
  "spktWelch":{
    "coeff":{
      "value":[2,5,7],
      "type":"long"
    }
  },
  "rangeCount":{
    "minVal":{
      "value":[-1],
      "type":"long"
    },
    "maxVal":{
      "value":[1],
      "type":"long"
    }
  },
  "partAutoCorrelation":{
    "lag":{
      "value":[6],
      "type":"long"
    }
  },
  "fftCoeff":{
    "coeff":{
      "value":[10],
      "type":"long"
    }
  },
  "aggLinTrend":{
    "chunkLen":{
      "value":[5,10,50],
      "type":"long"
    }
  },
  "eRatioByChunk":{
    "numSeg":{
      "value":[3],
      "type":"long"
    }
  },
  "changeQuant":{
    "lowerQuant":{
      "value":[0.1,0.2],
      "type":"float"
    },
    "upperQuant":{
      "value":[0.9,0.8],
      "type":"float"
    },
    "isAbs":{
      "value":[0,1],
      "type":"boolean"
    }
  }
}
